/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MIP712Upgradeable,
  MIP712UpgradeableInterface,
} from "../../../contracts/upgradeable/MIP712Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523461001a57604051610596610020823961059690f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c6384b0196e03610032576101c3565b600091031261003257565b600080fd5b60005b83811061004a5750506000910152565b818101518382015260200161003a565b61007b6100846020936100ac9361006f815190565b80835293849260200190565b95869101610037565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b906100ec6100e56100db845190565b8084529260200190565b9260200190565b9060005b8181106100fd5750505090565b90919261011a6101136001928651815260200190565b9460200190565b9291016100f0565b9395919461019261018a6101b69561017c6101af956100c99c9a61016f60e08c019260008d01907fff00000000000000000000000000000000000000000000000000000000000000169052565b8a820360208c015261005a565b9088820360408a015261005a565b976060870152565b73ffffffffffffffffffffffffffffffffffffffff166080850152565b60a0830152565b60c08184039101526100cc565b34610032576101d3366004610027565b6101f76101de6103b3565b936101ee97959793919360405190565b97889788610122565b0390f35b6100c99081565b6100c990546101fb565b6100c96100c96100c99290565b1561022057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4549503731323a20556e696e697469616c697a656400000000000000000000006044820152606490fd5b6100b06100c96100c99273ffffffffffffffffffffffffffffffffffffffff1690565b6100c99061027f565b6100c9906102a2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff82111761032357604052565b6102b4565b9061033c61033560405190565b92836102e3565b565b67ffffffffffffffff81116103235760208091020190565b906103686103638361033e565b610328565b918252565b369037565b9061033c61038861038284610356565b9361033e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0016020840161036d565b6103bd6001610202565b906000916103d16103cd8461020c565b9190565b1480610442575b6103e190610219565b6103e9610575565b916103f261057f565b9146916103fe306102ab565b9161041961041461040e8461020c565b9361020c565b610372565b7f0f00000000000000000000000000000000000000000000000000000000000000969594939291565b506103e16104506002610202565b61045c6103cd8561020c565b1490506103d8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b90600160028304921680156104b3575b60208310146104ae57565b610464565b91607f16916104a3565b805460009392916104da6104d083610493565b8085529360200190565b916001811690811561052c57506001146104f357505050565b6105069192939450600052602060002090565b916000925b8184106105185750500190565b80548484015260209093019260010161050b565b92949550505060ff1916825215156020020190565b906100c9916104bd565b9061033c6105659261055c60405190565b93848092610541565b03836102e3565b6100c99061054b565b6100c9600361056c565b6100c9600461056c56fea164736f6c6343000814000a";

type MIP712UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MIP712UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MIP712Upgradeable__factory extends ContractFactory {
  constructor(...args: MIP712UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MIP712Upgradeable> {
    return super.deploy(overrides || {}) as Promise<MIP712Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MIP712Upgradeable {
    return super.attach(address) as MIP712Upgradeable;
  }
  override connect(signer: Signer): MIP712Upgradeable__factory {
    return super.connect(signer) as MIP712Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MIP712UpgradeableInterface {
    return new utils.Interface(_abi) as MIP712UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MIP712Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as MIP712Upgradeable;
  }
}
