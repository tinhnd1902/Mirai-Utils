/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MRC20Upgradeable,
  MRC20UpgradeableInterface,
} from "../../../contracts/upgradeable/MRC20Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "payId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Pay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BURN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAY_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRANSFER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IMRC20.BurnRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "burnWithPermit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "string",
            name: "payId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IMRC20.PayRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "payWithPermit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IMRC20.PermitRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IMRC20.TransferRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "transferWithPermit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523461001a576040516124fd61002082396124fd90f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062bf26f41461017157806306fdde031461016c578063095ea7b3146101675780630d8c3e7114610162578063170f470a1461015d57806318160ddd1461015857806323b872dd1461015357806330adf81f1461014e578063313ce56714610149578063395093511461014457806342966c681461013f57806370a082311461013a5780637ecebe001461013557806384b0196e146101305780639081da071461012b57806395d89b41146101265780639a5fb90f146101215780639d392c721461011c578063a457c2d714610117578063a9059cbb14610112578063dd62ed3e1461010d5763f3e9e6e80361018157610888565b61086c565b61082d565b610811565b6107f2565b6107d3565b61075b565b61073c565b6106bd565b6105ab565b610516565b6104ea565b6104ba565b61048b565b610452565b610436565b6103eb565b6103ca565b61032f565b610301565b61025f565b61018b565b600091031261018157565b600080fd5b90565b565b346101815761019b366004610176565b6101d17f2da7344702acce4328e7e7680faee6e953dd18921b5e5ddeb69e0fd9007fae755b6040515b9182918290815260200190565b0390f35b60005b8381106101e85750506000910152565b81810151838201526020016101d8565b61021961022260209361024a9361020d815190565b80835293849260200190565b958691016101d5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b6020808252610186929101906101f8565b346101815761026f366004610176565b6101d161027a610a46565b6040519182918261024e565b73ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff81165b0361018157565b905035906101898261029f565b806102b7565b90503590610189826102cb565b919060408382031261018157610186906102f881856102be565b936020016102d1565b34610181576101d161031d6103173660046102de565b90610ae3565b60405191829182901515815260200190565b346101815761033f366004610176565b6101d17f89facbeb1d0143390b9f0d444787fc9e14b1bbfc2deced00f15046517e3207576101c0565b908160c09103126101815790565b60ff81166102b7565b9050359061018982610376565b61012081830312610181576103a18282610368565b926101866103b28460c0850161037f565b936103c08160e086016102d1565b93610100016102d1565b34610181576103e66103dd36600461038c565b929190916124da565b604051005b34610181576103fb366004610176565b6101d16101c0610a88565b90916060828403126101815761018661041f84846102be565b9361042d81602086016102be565b936040016102d1565b34610181576101d161031d61044c366004610406565b91610aee565b3461018157610462366004610176565b6101d17f3ea5711021c620ce4387a1d342db6a887fa12799080c4a9fb4d469e3fb8dcce96101c0565b346101815761049b366004610176565b6101d16104a6610a6d565b6040519182918260ff909116815260200190565b34610181576101d161031d6104d03660046102de565b90610b40565b9060208282031261018157610186916102d1565b34610181576103e66104fd3660046104d6565b6124e6565b9060208282031261018157610186916102be565b34610181576101d16101c061052c366004610502565b610a92565b6102866101866101869273ffffffffffffffffffffffffffffffffffffffff1690565b61018690610531565b61018690610554565b906105709061055d565b600052602052604060002090565b610186916008021c81565b90610186915461057e565b610186906105a6609991600092610566565b610589565b34610181576101d16101c06105c1366004610502565b610594565b906105e66105df6105d5845190565b8084529260200190565b9260200190565b9060005b8181106105f75750505090565b90919261061461060d6001928651815260200190565b9460200190565b9291016105ea565b9395919461068c6106846106b0956106766106a9956101869c9a61066960e08c019260008d01907fff00000000000000000000000000000000000000000000000000000000000000169052565b8a820360208c01526101f8565b9088820360408a01526101f8565b976060870152565b73ffffffffffffffffffffffffffffffffffffffff166080850152565b60a0830152565b60c08184039101526105c6565b34610181576106cd366004610176565b6101d16106d8611280565b936106e897959793919360405190565b9788978861061c565b908160a09103126101815790565b610100818303126101815761071482826106f1565b926101866107258460a0850161037f565b936107338160c086016102d1565b9360e0016102d1565b34610181576101d161031d6107523660046106ff565b9291909161218a565b346101815761076b366004610176565b6101d161027a610a50565b908160e09103126101815790565b60808183031261018157803567ffffffffffffffff811161018157826107ab918301610776565b926101866107bc846020850161037f565b936107ca81604086016102d1565b936060016102d1565b34610181576101d161031d6107e9366004610784565b9291909161201a565b34610181576101d161031d61080836600461038c565b929190916115c5565b34610181576101d161031d6108273660046102de565b90610beb565b34610181576101d161031d6108433660046102de565b90610aae565b9190604083820312610181576101869061086381856102be565b936020016102be565b34610181576101d16101c0610882366004610849565b90610ac3565b3461018157610898366004610176565b6101d17f7957390565ca76e53aabb4607ce04c30899dc7e563691d1e5df18a1daa2db0066101c0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b9060016002830492168015610910575b602083101461090b57565b6108c1565b91607f1691610900565b8054600093929161093761092d836108f0565b8085529360200190565b9160018116908115610989575060011461095057505050565b6109639192939450600052602060002090565b916000925b8184106109755750500190565b805484840152602090930192600101610968565b92949550505060ff1916825215156020020190565b906101869161091a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff821117610a1757604052565b6109a8565b90610189610a3692610a2d60405190565b9384809261099e565b03836109d7565b61018690610a1c565b6101866036610a3d565b6101866037610a3d565b610a676101866101869290565b60ff1690565b6101866012610a5a565b6101869081565b6101869054610a77565b6101866035610a7e565b610aa961018691610aa1600090565b506033610566565b610a7e565b610abe919033610e1f565b610e1f565b600190565b61018691610ade610aa992610ad6600090565b506034610566565b610566565b610abe91903361102c565b610abe929190610ab983338361113b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908201809211610b3b57565b610aff565b610abe9190610b593392610b548385610ac3565b610b2e565b9161102c565b15610b6657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608490fd5b610abe9190610b593392610bff8385610ac3565b610c0b82821015610b5f565b0390565b6102866101866101869290565b61018690610c0f565b15610c2c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608490fd5b15610cb857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608490fd5b15610d4457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608490fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905b9181191691161790565b6101866101866101869290565b90610e14610186610e1b92610df7565b8254610dc9565b9055565b610e85610e67610e2f6000610c1c565b61028673ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff86161415610c25565b73ffffffffffffffffffffffffffffffffffffffff84161415610cb1565b610ed0610ebd836033610ade610eae88610ea2610aa98986610566565b610c0b82821015610d3d565b610eb88784610566565b610e04565b610eca8561024a83610a7e565b90610e04565b610f10610f06610f007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9361055d565b9361055d565b936101c460405190565b0390a3565b15610f1c57565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608490fd5b15610fa757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608490fd5b61109261107461103c6000610c1c565b61028673ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff86161415610f15565b73ffffffffffffffffffffffffffffffffffffffff84161415610fa0565b6110a583610eb884610ade856034610566565b610f10610f06610f007f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259361055d565b156110dc57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b906111468183610ac3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103611174575b50505050565b61118893610b5991610c0b828210156110d5565b3880808061116e565b1561119857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4549503731323a20556e696e697469616c697a656400000000000000000000006044820152606490fd5b9061018961120460405190565b92836109d7565b67ffffffffffffffff8111610a175760208091020190565b906112356112308361120b565b6111f7565b918252565b369037565b9061018961125561124f84611223565b9361120b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0016020840161123a565b61128a6065610a7e565b9060009161129e61129a84610df7565b9190565b148061130f575b6112ae90611191565b6112b6611331565b916112bf61133b565b9146916112cb3061055d565b916112e66112e16112db84610df7565b93610df7565b61123f565b7f0f00000000000000000000000000000000000000000000000000000000000000969594939291565b506112ae61131d6066610a7e565b61132961129a85610df7565b1490506112a5565b6101866067610a3d565b6101866068610a3d565b35610186816102cb565b1561135657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4d49503731323a204558504952454400000000000000000000000000000000006044820152606490fd5b90610186949392916113de6113cc60a08401611345565b6113d761129a429290565b111561134f565b61141a565b356101868161029f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b3b5760010190565b50927f2da7344702acce4328e7e7680faee6e953dd18921b5e5ddeb69e0fd9007fae759291849061144a826113e3565b926020870194611459866113e3565b94604089019561146887611345565b9160608b01996114778b611345565b60996114828a6113e3565b61148b91610566565b8d61149582610a7e565b9161149f836113ed565b6114a891610e04565b60a0016114b490611345565b916114be60405190565b9687966020880196611528968890815273ffffffffffffffffffffffffffffffffffffffff909116602082015260e0810196959490939092909173ffffffffffffffffffffffffffffffffffffffff1660408501526060840152608083015260a082015260c00152565b90810382520361153890826109d7565b8051906020012092611549856113e3565b9361155394611639565b61155c906113e3565b91611566906113e3565b9061157090611345565b9061157a92610e1f565b61158381611345565b9160009261159084610df7565b1061159e575b505050600190565b6115bd926115ac91016113e3565b906115b73391611345565b91610e1f565b388080611596565b6101869392919060006113b5565b156115da57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d49503731323a20494e56414c49445f5349474e4154555245000000000000006044820152606490fd5b926116509261164b61018996936119cf565b6116a7565b61165d6102866000610c1c565b73ffffffffffffffffffffffffffffffffffffffff821614159182611684575b50506115d3565b73ffffffffffffffffffffffffffffffffffffffff90811692501614388061167d565b9161018693916116bf936116b9600090565b50611900565b91909161170f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005111561170057565b6116c7565b90610189826116f6565b6117196000611705565b61172282611705565b0361172a5750565b6117346001611705565b61173d82611705565b036117a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b6117ab6002611705565b6117b482611705565b03611818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b61182b6118256003611705565b91611705565b1461183257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b61018690610df7565b6118f0610189946118e96060949897956118df608086019a6000870152565b60ff166020850152565b6040830152565b0152565b6040513d6000823e3d90fd5b91929161190c836118b7565b61193861129a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0610df7565b116119bb5761195860009360209561194f60405190565b948594856118c0565b838052039060015afa156119b6576000519060009161197683610c1c565b73ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8316146119ae57509190565b925050600190565b6118f4565b505050506119c96000610c1c565b90600390565b610186906119db611a13565b604291604051917f19010000000000000000000000000000000000000000000000000000000000008352600283015260228201522090565b610186611a70565b9095949261018994611a4d611a5492611a46608096611a3f60a088019c6000890152565b6020870152565b6040850152565b6060830152565b019073ffffffffffffffffffffffffffffffffffffffff169052565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611ad6611a9c611aec565b611aa4611b5d565b92611aca46611ab23061055d565b90611abc60405190565b968795602087019586611a1b565b908103825203826109d7565b611ae8611ae1825190565b9160200190565b2090565b611af7610186611331565b8051600090611b0861129a83610df7565b1115611b1a5750611ae8611ae1825190565b9050611b2f611b296065610a7e565b91610df7565b8114611b385790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b611b6861018661133b565b8051600090611b7961129a83610df7565b1115611b8b5750611ae8611ae1825190565b9050611b2f611b296066610a7e565b9061018694939291611bb16113cc60c08401611345565b611d4a565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe13682900301821215610181570180359067ffffffffffffffff8211610181576020019136829003831361018157565b67ffffffffffffffff8111610a1757602090601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b90826000939282370152565b90929192611c6061123082611c09565b938185526020850190828401116101815761018992611c44565b610186913691611c50565b90610570565b61018690610a67565b6101869054611c8b565b15611ca557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4d524332303a2050617949642068617320616c7265616479206265656e20757360448201527f65640000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9060ff90610ded565b90611d43610186610e1b92151590565b8254611d2a565b9061018694939291611dae611d6e610186611d686040860186611bb6565b90611c7a565b611d79611ae1825190565b20611da9609a91611da1611d9c611d98611d938487611c85565b611c94565b1590565b611c9e565b600192611c85565b611d33565b611dfb565b919061022281611dca8161024a9560209181520190565b8095611c44565b6118f0611df36040936101899698979560608501918583036000870152611db3565b966020830152565b507f7957390565ca76e53aabb4607ce04c30899dc7e563691d1e5df18a1daa2db006939092918390611e2c826113e3565b926020860194611e3b866113e3565b946060880195611e4a87611345565b9160808a019a611e598c611345565b6099611e648a6113e3565b611e6d91610566565b611e7681610a7e565b90611e80826113ed565b611e8991610e04565b611e9560c08e01611345565b91611e9f60405190565b9687966020880196611f09968890815273ffffffffffffffffffffffffffffffffffffffff909116602082015260e0810196959490939092909173ffffffffffffffffffffffffffffffffffffffff1660408501526060840152608083015260a082015260c00152565b908103825203611f1990826109d7565b8051906020012092611f2a856113e3565b93611f3494611639565b611f3d906113e3565b611f46836113e3565b611f4f83611345565b90611f5992610e1f565b611f6284611345565b90600091611f6f83610df7565b10611faf611fa1611f96611f90611fa996611ff595611ffd575b89016113e3565b966113e3565b966040810190611bb6565b949093611345565b96611345565b611fe2611fdc7f8b1708f412bb04ea5555137e3d7281c29fab0fd7ee1f45d0ebc1e412afcfae599661055d565b9661055d565b96611fec60405190565b94859485611dd1565b0390a3600190565b61201561200b828c016113e3565b336115b78e611345565b611f89565b610186939291906000611b9a565b906101869493929161203f6113cc60808401611345565b61209e565b91946120976118f09298979561209060a0966120896101899a61206c60c08a019e60008b0152565b73ffffffffffffffffffffffffffffffffffffffff166020890152565b6040870152565b6060850152565b6080830152565b50927f89facbeb1d0143390b9f0d444787fc9e14b1bbfc2deced00f15046517e3207579184916120cd836113e3565b9460208701946120dc86611345565b60408901976120ea89611345565b9260996120f6896113e3565b6120ff91610566565b61210881610a7e565b90612112826113ed565b61211b91610e04565b61212760808d01611345565b9061213160405190565b95869560208701956121439587612044565b90810382520361215390826109d7565b8051906020012092612164856113e3565b9361216e94611639565b612177906113e3565b9061218190611345565b61157a916122b0565b610186939291906000612028565b1561219f57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b1561222b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b6122ba6000610c1c565b906122f373ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff83161415612198565b61231f6033610eb8836123198761230d610aa98487610566565b610c0b82821015612224565b92610566565b610ed061233084610c0b6035610a7e565b6035610e04565b9061018993929161234d6113cc60a08301611345565b927f3ea5711021c620ce4387a1d342db6a887fa12799080c4a9fb4d469e3fb8dcce99291849061237c826113e3565b92602087019461238b866113e3565b94604089019561239a87611345565b9160608b01996123a98b611345565b60996123b48a6113e3565b6123bd91610566565b8d6123c782610a7e565b916123d1836113ed565b6123da91610e04565b60a0016123e690611345565b916123f060405190565b968796602088019661245a968890815273ffffffffffffffffffffffffffffffffffffffff909116602082015260e0810196959490939092909173ffffffffffffffffffffffffffffffffffffffff1660408501526060840152608083015260a082015260c00152565b90810382520361246a90826109d7565b805190602001209261247b856113e3565b9361248594611639565b61248e906113e3565b91612498906113e3565b906124a290611345565b906124ac9261102c565b6124b581611345565b916000926124c284610df7565b106124cc57505050565b610189926115ac91016113e3565b90610189939291612337565b61018990336122b056fea164736f6c6343000814000a";

type MRC20UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MRC20UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MRC20Upgradeable__factory extends ContractFactory {
  constructor(...args: MRC20UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MRC20Upgradeable> {
    return super.deploy(overrides || {}) as Promise<MRC20Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MRC20Upgradeable {
    return super.attach(address) as MRC20Upgradeable;
  }
  override connect(signer: Signer): MRC20Upgradeable__factory {
    return super.connect(signer) as MRC20Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MRC20UpgradeableInterface {
    return new utils.Interface(_abi) as MRC20UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MRC20Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as MRC20Upgradeable;
  }
}
