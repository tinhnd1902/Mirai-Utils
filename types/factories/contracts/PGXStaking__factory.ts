/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PGXStaking,
  PGXStakingInterface,
} from "../../contracts/PGXStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_PGX",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "LogStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "LogWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "PGX",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minStakeAmount",
        type: "uint256",
      },
    ],
    name: "addPackage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPackages",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "packageId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minStakeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct PGXStaking.Package[]",
        name: "_packages",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "packageInfos",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minStakeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
    ],
    name: "removePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "stakeOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakedInfos",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "unlockedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "stakesOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "unlockedTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "unStaked",
            type: "bool",
          },
        ],
        internalType: "struct PGXStaking.StakedInfo[]",
        name: "infos",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "packageId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minStakeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct PGXStaking.Package",
        name: "_package",
        type: "tuple",
      },
    ],
    name: "updatePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "stakeIds",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523462000030576200001e62000018620000d3565b62000156565b604051611f41620001d58239611f4190f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006d57604052565b62000035565b906200008a6200008260405190565b92836200004b565b565b6001600160a01b031690565b90565b6001600160a01b038116036200003057565b905051906200008a826200009b565b9060208282031262000030576200009891620000ad565b620000986200211680380380620000ea8162000073565b928339810190620000bc565b62000098906200008c906001600160a01b031682565b6200009890620000f6565b62000098906200010c565b906200013662000098620001529262000117565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b6200008a90620001656200016d565b600c62000122565b6200008a336000546001600160a01b0316906200018c81600062000122565b620001c3620001bc7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000117565b9162000117565b91620001ce60405190565b600090a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063015f70341461011b57806312504a781461011657806318160ddd1461011157806333b69c4c1461010c578063369d1ef7146101075780635c05a89f146101025780636c2aa2db146100fd57806370a08231146100f8578063715018a6146100f35780637628a37d146100ee5780638c13bb07146100e95780638da5cb5b146100e4578063983d95ce146100df578063c21eefed146100da578063c79d9ff6146100d55763f2fde38b0361000e57610949565b610918565b610867565b61076d565b6106ec565b6106c0565b610689565b610641565b610626565b6105df565b610496565b6103dc565b6103a1565b61027f565b610231565b6101c0565b600091031261012b57565b600080fd5b610152916008021c5b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b906101529154610130565b6101526000600c610155565b6101396101526101529273ffffffffffffffffffffffffffffffffffffffff1690565b6101529061016c565b6101529061018f565b6101aa90610198565b9052565b6020810192916101be91906101a1565b565b3461012b576101d0366004610120565b6101e76101db610160565b604051918291826101ae565b0390f35b805b0361012b57565b905035906101be826101eb565b909160608284031261012b5761015261021a84846101f4565b9361022881602086016101f4565b936040016101f4565b3461012b576101e761024d610247366004610201565b9161193f565b6040519182918290815260200190565b610152916008021c81565b90610152915461025d565b6101526000600a610268565b3461012b5761028f366004610120565b6101e761024d610273565b6101ed81610139565b905035906101be8261029a565b9060208282031261012b57610152916102a3565b6101aa90610139565b9060a0806101be936102e7600082015160008601906102c4565b6102f660208201516020860152565b61030560408201516040860152565b61031460608201516060860152565b61032360808201516080860152565b01511515910152565b906103398160c0936102cd565b0190565b9061035d61035661034c845190565b8084529260200190565b9260200190565b9060005b81811061036e5750505090565b909192610388610381600192865161032c565b9460200190565b929101610361565b60208082526101529291019061033d565b3461012b576101e76103bc6103b73660046102b0565b611e07565b60405191829182610390565b9060208282031261012b57610152916101f4565b3461012b576103f46103ef3660046103c8565b611c04565b604051005b8051151582526101be9190608090819061041860208201516020860152565b61042760408201516040860152565b61043660608201516060860152565b0151910152565b906103398160a0936103f9565b9061045961035661034c845190565b9060005b81811061046a5750505090565b90919261047d610381600192865161043d565b92910161045d565b60208082526101529291019061044a565b3461012b576104a6366004610120565b6101e76104b1610da0565b60405191829182610485565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff82111761052c57604052565b6104bd565b906101be61053e60405190565b92836104ec565b8015156101ed565b905035906101be82610545565b91909160a08184031261012b576105c561057460a0610531565b936000610581828561054d565b908601526020610593828286016101f4565b9086015260406105a5828286016101f4565b9086015260606105b7828286016101f4565b9086015260808093016101f4565b90830152565b9060a08282031261012b576101529161055a565b3461012b576103f46105f23660046105cb565b611bab565b9061060190610198565b600052602052604060002090565b61015290610621600b916000926105f7565b610268565b3461012b576101e761024d61063c3660046102b0565b61060f565b3461012b57610651366004610120565b6103f46109a3565b909160608284031261012b5761015261067284846101f4565b9361068081602086016101f4565b936040016102a3565b6103f4610697366004610659565b9161104b565b919060408382031261012b57610152906106b781856102a3565b936020016101f4565b3461012b576101e761024d6106d636600461069d565b90611e55565b6020810192916101be91906102c4565b3461012b576106fc366004610120565b6101e7610707610961565b604051918291826106dc565b909182601f8301121561012b5781359167ffffffffffffffff831161012b57602001926020830284011161012b57565b9060208282031261012b57813567ffffffffffffffff811161012b576107699201610713565b9091565b3461012b576103f4610780366004610743565b9061160e565b6101526101526101529290565b9061060190610786565b61015290610139565b610152905461079d565b6101529081565b61015290546107b0565b6107cc906008610793565b906107d6826107a6565b916107e3600182016107b7565b916107f0600283016107b7565b916107fd600382016107b7565b91610152600561080f600485016107b7565b93015460ff1690565b919461085861085f9298979561085160a09661084a6101be9a61084360c08a019e60008b01906102c4565b6020890152565b6040870152565b6060850152565b6080830152565b019015159052565b3461012b576101e761088261087d3660046103c8565b6107c1565b9261089296949692919260405190565b96879687610818565b6108a6906009610793565b805460ff16916108b8600183016107b7565b916108c5600282016107b7565b9161015260046108d7600385016107b7565b93016107b7565b901515815260a0810195946101be949093608093610914929161090d91610906906020870152565b6040850152565b6060830152565b0152565b3461012b576101e761093361092e3660046103c8565b61089b565b9161094095939560405190565b958695866108de565b3461012b576103f461095c3660046102b0565b610b02565b61015260006107a6565b610973610a19565b6101be610991565b6101396101526101529290565b6101529061097b565b6101be61099e6000610988565b610b48565b6101be61096b565b156109b257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815280610a15600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6101be610a24610961565b610a3b610a3533610139565b610139565b91610139565b146109ab565b6101be90610a4d610a19565b610ade565b15610a5957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608490fd5b6101be9061099e610af2610a306000610988565b610afb83610139565b1415610a52565b6101be90610a41565b9073ffffffffffffffffffffffffffffffffffffffff905b9181191691161790565b90610b3d610152610b4492610198565b8254610b0b565b9055565b610b5260006107a6565b90610b5e816000610b2d565b610b91610b8b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610198565b91610198565b91610b9b60405190565b600090a3565b67ffffffffffffffff811161052c5760208091020190565b90610bcb610bc683610ba1565b610531565b918252565b61015260a0610531565b610be2610bd0565b9060008252602080808080860160005b815201600081520160008152016000905250565b610152610bda565b60005b828110610c1d57505050565b602090610c28610c06565b8184015201610c11565b906101be610c48610c4284610bb9565b93610ba1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401610c0e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ccf5760010190565b610c73565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90610d0c825190565b811015610d1d576020809102010190565b610cd4565b906101be610d906004610d33610bd0565b94610d48610d42825460ff1690565b15158752565b610d5e610d57600183016107b7565b6020880152565b610d74610d6d600283016107b7565b6040880152565b610d8a610d83600383016107b7565b6060880152565b016107b7565b6080840152565b61015290610d22565b6002610dab81610e19565b90610db582610c32565b928390610dc26000610786565b845b811015610e1157610e0a610dc491610def610dea6009610de4848a610e4c565b90610793565b610d97565b610df9828a610d03565b52610e048189610d03565b50610ca2565b9050610dc2565b509250925050565b610e2f600061015292610e2a600090565b500190565b600061015291610e3d600090565b50015490565b61015290610786565b61015291610e616000610e6693610e2a600090565b610e8e565b610e43565b8054821015610d1d57610e85600191600052602060002090565b91020190600090565b610152916000610ea792610ea0600090565b5001610e6b565b90610268565b905051906101be82610545565b9060208282031261012b5761015291610ead565b6040906109146101be9496959396610eee606084019860008501906102c4565b60208301906102c4565b6040513d6000823e3d90fd5b15610f0b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f696e76616c696420616d6f756e740000000000000000000000000000000000006044820152606490fd5b91908201809211610ccf57565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90610b23565b90610faf610152610b4492610786565b8254610f77565b81810292918115918404141715610ccf57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90611002565b9190565b90811561100d570490565b610fc9565b91946108586110449298979561085160a09661084a6101be9a61103a60c08a019e60008b0152565b60208901906102c4565b01906102c4565b9061105e611059600c6107a6565b610198565b92600093611071610a35610a3087610988565b0361123c57611086610dea34945b6009610793565b9161109085610786565b84119081611231575b5080611215575b6110a990610f04565b60049081926110b7846112ed565b33936110c485600b6105f7565b866110ce826107b7565b906110d891610f6a565b6110e191610f9f565b856110ec600a6107b7565b906110f691610f6a565b61110190600a610f9f565b61110a906112d8565b92839085611119836008610793565b9889019061112691610b2d565b6111338760028a01610f9f565b60608301516111429088610fb6565b611153670de0b6b3a7640000610786565b61115c91610ff8565b92600389019361116c9085610f9f565b6040015161117a9042610f6a565b97600181019861118a908a610f9f565b019061119591610f9f565b6111a08460056105f7565b6111a9816107b7565b6111b290610ca2565b6111bb91610f9f565b6111c58385611e75565b6111ce906107b7565b946111d8906107b7565b7f74b67083b194953c8a4514ced45d284d4c3b838c40f251b14b7910d2c5a49ef49561120360405190565b9586956112109587611012565b0390a1565b506110a9611227610152608085015190565b84101590506110a0565b905083101538611099565b819261124b611059600c6107a6565b9060206323b872dd92339061127e8961126330610198565b966112898a61127160405190565b998a978896879560e01b90565b855260048501610ece565b03925af19081156112d35761108692610dea926112a7575b5061107f565b6112c79060203d81116112cc575b6112bf81836104ec565b810190610eba565b6112a1565b503d6112b5565b610ef8565b6000610152916112e6600090565b50016107b7565b6101be9061130c60006113006001610786565b920191610339836107b7565b90610f9f565b9190811015610d1d576020020190565b35610152816101eb565b906101aa90610139565b61015260c0610531565b906101be6113af6005611351611336565b9461136461135e826107a6565b8761132c565b611373610d57600183016107b7565b611382610d6d600283016107b7565b611391610d83600383016107b7565b6113a76113a0600483016107b7565b6080880152565b015460ff1690565b151560a0840152565b61015290611340565b156113c857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f686173206265656e2077697468647261776e00000000000000000000000000006044820152606490fd5b6101529051610139565b1561143857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f696e76616c69642063616c6c65720000000000000000000000000000000000006044820152606490fd5b1561149e57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6e6f74207965742074696d6500000000000000000000000000000000000000006044820152606490fd5b9060ff90610b23565b90611516610152610b4492151590565b82546114fd565b8015610ccf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b91908203918211610ccf57565b9160206101be929493610914604082019660008301906102c4565b67ffffffffffffffff811161052c57602090601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b90610bcb610bc683611570565b3d156115d2576115c73d6115ab565b903d6000602084013e565b606090565b1561012b57565b6109146101be94611607606094989795611600608086019a60008701906102c4565b6020850152565b6040830152565b819260005b845b8110156118b55761162f61162a828686611312565b611322565b60089061164461163f8284610793565b6113b8565b9161166161165c61165860a0860151151590565b1590565b6113c1565b82906116b161166f83611427565b916116873393611681610a3586610139565b14611431565b61169d611695602088015190565b421015611497565b60056116ab86600193610793565b01611506565b6116d96116c860056116c285611427565b906105f7565b61130c6116d4826107b7565b61151d565b6117398361173460408701946117106116f0875190565b61130c611701600b6116c286611427565b9161170b836107b7565b611548565b61172f61172861171e885190565b61170b600a6107b7565b600a610f9f565b611427565b611eb3565b611746611059600c6107a6565b90600091611759610a35610a3085610988565b03611813575091816118046117d060606117ca6117c5886117be81808d9b6116159f9d61180c9f6117a08a61179a6117956117a6958501611427565b955190565b92015190565b90610f6a565b60405190818003925af16117b86115b8565b506115d7565b8801611427565b945190565b95015190565b7fd52551477a320999cde57bfa527233cd7a79f23cd5c9a1d73b20ca2dac999aa6946117fb60405190565b948594856115de565b0390a1610ca2565b9050611613565b94929093916020611827611059600c6107a6565b9663a9059cbb976118618861184761183d875190565b60608a01516117a0565b9a61186c61185460405190565b9c8d968795869460e01b90565b845260048401611555565b03925af19586156112d3576117d060606117ca6117c561180c99611804956116159c611899575b506117be565b6118b09060203d81116112cc576112bf81836104ec565b611893565b5092505050565b906101529392916118cb610a19565b611930929391600091506116ab6001936119276118f66118e88790565b6118f1816112ed565b6112d8565b9761191e6119086101528b6009610793565b956119158b8a8901610f9f565b60028701610f9f565b60038501610f9f565b60048301610f9f565b61193b81600261194c565b5090565b61015292919060006118bc565b90611969610ffe600061015294611961600090565b500192610786565b6119f1565b91906008610b239102916119a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b91906119b5610152610b449390565b90835461196e565b908154916801000000000000000083101561052c57826119e59160016101be95018155610e6b565b906119a6565b90610601565b6119fe6116588383611a37565b15611a3057611a2b91611a26906001611a1f84611a1b84826119bd565b5490565b93016119eb565b610f9f565b600190565b5050600090565b611a55916001611a5092611a49600090565b50016119eb565b6107b7565b611a62610ffe6000610786565b141590565b6101be90611a73610a19565b611b48565b15611a7f57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f74206578697374656e74207061636b6167654964000000000000000000006044820152606490fd5b6101be919061130c90608090600490611b0181611afb8751151590565b90611506565b611b136001820161130c602088015190565b611b256002820161130c604088015190565b611b376003820161130c606088015190565b0192015190565b906101be91611ade565b6101be90611b8160208201611b5b815190565b611b68610ffe6000610786565b1180611b86575b611b7890611a78565b51600990610de4565b611b3e565b50611b78611b92825190565b611ba2610ffe61015260016112d8565b11159050611b6f565b6101be90611a67565b6101be90611bc0610a19565b611be690611bce6000610786565b811180611be9575b611bdf90611a78565b6002611c0d565b50565b50611bdf611bfa61015260016112d8565b8211159050611bd6565b6101be90611bb4565b90611c22610ffe600061015294611961600090565b611cc5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6101be916000916119a6565b80548015611ca3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190611ca0611c9a8383610e6b565b90611c56565b55565b611c27565b91906119b5610152610b4493610786565b6101be91600091611ca8565b90611cd6611a5082600185016119eb565b600092611ce284610786565b8214611d355761015292611d3b9492611d4692611d406001978893611d0f611d0986610786565b82611548565b88850191611d2d611d1e845490565b611d2789610786565b90611548565b828103611d4b575b50505090565b611c62565b016119eb565b611cb9565b6119e5611d6e611d7694611d65610ea7611a269589610e6b565b92839188610e6b565b8888016119eb565b388080611d35565b611d86611336565b906000825260208080808080870160008152016000610bf2565b610152611d7e565b60005b828110611db757505050565b602090611dc2611da0565b8184015201611dab565b906101be611ddc610c4284610bb9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401611da8565b611e15611a508260056105f7565b90611e1f82611dcc565b928390611e2c6000610786565b845b811015610e1157611e4e611e2e91610def61163f6008610de4848a611e55565b9050611e2c565b61015291611e70611a5092611e68600090565b5060066105f7565b610793565b611a2682611eac6101be94611a26611e7095611ea2611e98611a508360056105f7565b611d276001610786565b96879160066105f7565b6007610793565b611d466101be92611e70600093611ef385611d46611ed5611a508560056105f7565b956007611ee5611a508383610793565b888103611efa575b50610793565b60066105f7565b80611a2688611f288c611a26611f2e96611e70611f20611a50600695611e7089886105f7565b9586946105f7565b84610793565b38611eed56fea164736f6c6343000814000a";

type PGXStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGXStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGXStaking__factory extends ContractFactory {
  constructor(...args: PGXStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _PGX: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGXStaking> {
    return super.deploy(_PGX, overrides || {}) as Promise<PGXStaking>;
  }
  override getDeployTransaction(
    _PGX: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_PGX, overrides || {});
  }
  override attach(address: string): PGXStaking {
    return super.attach(address) as PGXStaking;
  }
  override connect(signer: Signer): PGXStaking__factory {
    return super.connect(signer) as PGXStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGXStakingInterface {
    return new utils.Interface(_abi) as PGXStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGXStaking {
    return new Contract(address, _abi, signerOrProvider) as PGXStaking;
  }
}
