/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Package, PackageInterface } from "../../contracts/Package";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "market_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListedPackage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "UnListedPackage",
    type: "event",
  },
  {
    inputs: [],
    name: "MARKET",
    outputs: [
      {
        internalType: "contract IMarketServicePackage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "createPackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "createdIds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unListPackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "updateTokenUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523462000031576200001f62000018620001b0565b9162000431565b60405161156c620004f1823961156c90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160401b0381116200006e57602090601f01601f19160190565b60005b838110620000be5750506000910152565b8181015183820152602001620000ad565b90929192620000e8620000e2826200008d565b62000074565b9381855260208501908284011162000031576200008b92620000aa565b9080601f83011215620000315781516200012292602001620000cf565b90565b6001600160a01b031690565b6001600160a01b038116036200003157565b905051906200008b8262000131565b9091606082840312620000315781516001600160401b0381116200003157836200017e91840162000105565b602083015190936001600160401b0382116200003157620001a6816200012293860162000105565b9360400162000143565b620001d362001a5d80380380620001c78162000074565b92833981019062000152565b909192565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801562000211575b60208310146200020b57565b620001d8565b91607f1691620001ff565b9160001960089290920291821b911b5b9181191691161790565b6200012262000122620001229290565b91906200025b62000122620002649362000236565b9083546200021c565b9055565b6200008b9160009162000246565b81811062000282575050565b8062000292600060019362000268565b0162000276565b9190601f8111620002a957505050565b620002bd6200008b93600052602060002090565b906020601f840181900483019310620002e1575b6020601f90910104019062000276565b9091508190620002d1565b90620002f6815190565b906001600160401b0382116200006e576200031e82620003178554620001ee565b8562000299565b602090601f83116001146200035d576200026492916000918362000351575b5050600019600883021c1916906002021790565b0151905038806200033d565b601f198316916200037385600052602060002090565b9260005b818110620003b4575091600293918560019694106200039a575b50505002019055565b01516000196008601f8516021c1916905538808062000391565b9193602060018192878701518155019501920162000377565b906200008b91620002ec565b620001229062000125906001600160a01b031682565b6200012290620003d9565b6200012290620003ef565b906001600160a01b03906200022c565b9062000429620001226200026492620003fa565b825462000405565b916200045e6200046492620004566200008b956200044e6200046c565b6001620003cd565b6002620003cd565b620003fa565b600362000415565b6200008b336200048e565b620001229062000125565b62000122905462000477565b6200049a600062000482565b90620004a881600062000415565b620004df620004d87f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093620003fa565b91620003fa565b91620004ea60405190565b600090a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80630bb78ec1146100db5780632255ee63146100d65780636352211e146100d1578063715018a6146100cc57806378e3214f146100c75780638da5cb5b146100c2578063c7e45ec0146100bd578063c87b56dd146100b8578063d31af484146100b3578063d8c92d82146100ae578063f2fde38b146100a95763f46f16c20361000e57610702565b610664565b610638565b61061f565b6105ca565b61059d565b610551565b610538565b6104fd565b6104b0565b61048b565b61039b565b805b036100e957565b600080fd5b905035906100fb826100e0565b565b906020828203126100e957610111916100ee565b90565b6101116101116101119290565b9061012b90610114565b600052602052604060002090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b90600160028304921680156101b7575b60208310146101b257565b610168565b91607f16916101a7565b805460009392916101de6101d483610197565b8085529360200190565b916001811690811561023057506001146101f757505050565b61020a9192939450600052602060002090565b916000925b81841061021c5750500190565b80548484015260209093019260010161020f565b92949550505060ff1916825215156020020190565b90610111916101c1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff8211176102be57604052565b61024f565b906100fb6102dd926102d460405190565b93848092610245565b038361027e565b906000106102f557610111906102c3565b610139565b6101119061030c600591600092610121565b6102e4565b60005b8381106103245750506000910152565b8181015183820152602001610314565b61035561035e60209361038693610349815190565b80835293849260200190565b95869101610311565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b602080825261011192910190610334565b346100e9576103c26103b66103b13660046100fd565b6102fa565b6040519182918261038a565b0390f35b909182601f830112156100e95781359167ffffffffffffffff83116100e95760200192600183028401116100e957565b73ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff81166100e2565b905035906100fb8261040f565b916080838303126100e95761044d82846100ee565b9260208101359167ffffffffffffffff83116100e957610472846101119484016103c6565b93909461048281604086016100ee565b9360600161042b565b346100e9576104a761049e366004610438565b93929092610e62565b604051005b9052565b346100e9576103c26104cb6104c63660046100fd565b6109be565b6040519182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b60009103126100e957565b346100e95761050d3660046104f2565b6104a761077e565b91906040838203126100e9576101119061052f818561042b565b936020016100ee565b346100e9576104a761054b366004610515565b90611161565b346100e9576105613660046104f2565b6103c26104cb61073c565b610111916008021c5b60ff1690565b90610111915461056c565b61011190610598600491600092610121565b61057b565b346100e9576103c26105b86105b33660046100fd565b610586565b60405191829182901515815260200190565b346100e9576103c26103b66105e03660046100fd565b6109a2565b9190916040818403126100e9576105fc83826100ee565b92602082013567ffffffffffffffff81116100e95761061b92016103c6565b9091565b346100e9576104a76106323660046105e5565b91611050565b346100e9576104a761064b3660046100fd565b611029565b906020828203126100e9576101119161042b565b346100e9576104a7610677366004610650565b6108fa565b610111916008021c73ffffffffffffffffffffffffffffffffffffffff1690565b90610111915461067c565b6101116000600361069d565b6103f66101116101119273ffffffffffffffffffffffffffffffffffffffff1690565b610111906106b4565b610111906106d7565b6104ac906106e0565b6020810192916100fb91906106e9565b346100e9576107123660046104f2565b6103c261071d6106a8565b604051918291826106f2565b610111906103f6565b6101119054610729565b6101116000610732565b61074e6107f4565b6100fb61076c565b6103f66101116101119290565b61011190610756565b6100fb6107796000610763565b610940565b6100fb610746565b1561078d57565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152806107f0600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6100fb6107ff61073c565b61082561080b336103f6565b9173ffffffffffffffffffffffffffffffffffffffff1690565b14610786565b6100fb906108376107f4565b6108c8565b1561084357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608490fd5b6100fb906107796108dc6103f66000610763565b73ffffffffffffffffffffffffffffffffffffffff8316141561083c565b6100fb9061082b565b9073ffffffffffffffffffffffffffffffffffffffff905b9181191691161790565b9061093561011161093c926106e0565b8254610903565b9055565b61094a6000610732565b90610956816000610925565b6109896109837f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936106e0565b916106e0565b9161099360405190565b600090a3565b610111906102c3565b6109b9610111916109b1606090565b506005610121565b610999565b6109d5610111916109cd600090565b506007610121565b610732565b906100fb949392916109ea6107f4565b610d1a565b61011190610575565b61011190546109ef565b15610a0957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f65786973747320696400000000000000000000000000000000000000000000006044820152606490fd5b9060ff9061091b565b90610a8161011161093c92151590565b8254610a68565b9190600861091b910291610abb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9190610ad161011161093c93610114565b908354610a88565b6100fb91600091610ac0565b818110610af0575050565b80610afe6000600193610ad9565b01610ae5565b9190601f8111610b1357505050565b610b256100fb93600052602060002090565b906020601f840181900483019310610b47575b6020601f909101040190610ae5565b9091508190610b38565b919067ffffffffffffffff82116102be57610b7682610b708554610197565b85610b04565b600090601f8311600114610bcf5761093c929160009183610bc4575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600883021c1916906002021790565b013590503880610b92565b601f19831691610be485600052602060002090565b92815b818110610c3f57509160029391856001969410610c08575b50505002019055565b01357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601f84166008021c19169055388080610bff565b91936020600181928787013581550195019201610be7565b906100fb9291610b51565b905051906100fb826100e0565b906020828203126100e95761011191610c62565b9081526060810193926100fb929091604091610ca0906020830152565b019073ffffffffffffffffffffffffffffffffffffffff169052565b6040513d6000823e3d90fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9061091b565b90610d0061011161093c92610114565b8254610cc8565b9081526040810192916100fb9160200152565b93610da260008695610d70602096600496610d4c610d47610d43610d3e8d8c610121565b6109f8565b1590565b610a02565b610d606001610d5b8c8b610121565b610a71565b610d6b8a6005610121565b610c57565b610dab610d85610d806003610732565b6106e0565b94637f71b98c92610d9560405190565b998a988997889660e01b90565b86528501610c83565b03925af1908115610e5d57600091610e2f575b50610dd381610dce846006610121565b610cf0565b610df3610de3610d806003610732565b610dee846007610121565b610925565b7fb884e885b7d240409cc48ad0b87dee004f82fcbb94287afc2b4069c2daf848c991610e2a610e2160405190565b92839283610d07565b0390a1565b610e50915060203d8111610e56575b610e48818361027e565b810190610c6f565b38610dbe565b503d610e3e565b610cbc565b906100fb949392916109da565b6100fb90610e7b6107f4565b610f43565b15610e8757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6e6f6e20657869737473206964000000000000000000000000000000000000006044820152606490fd5b6101119081565b6101119054610ee6565b9190600861091b910291610abb73ffffffffffffffffffffffffffffffffffffffff841b90565b9190610f2f61011161093c936106e0565b908354610ef7565b6100fb91600091610f1e565b6004610f5a610f55610d3e8484610121565b610e80565b610f6d610f68836006610121565b610eed565b90610f7b610d806003610732565b9063d8c92d8290823b156100e9578392610fab60008094610fb8610f9e60405190565b9788968795869460e01b90565b8452830190815260200190565b03925af18015610e5d5761100b575b50610fdd6000610fd8846007610121565b610f37565b7f9c4af0709a76f4ea8b43c40ab280842c9c1fa931caf79b3b0300b7216241927d91610e2a610e2160405190565b61102390600061101b818361027e565b8101906104f2565b38610fc7565b6100fb90610e6f565b906100fb92916110406107f4565b90610d6b6100fb93926005610121565b906100fb9291611032565b906100fb916110686107f4565b6110f9565b906100fb61107a60405190565b928361027e565b67ffffffffffffffff81116102be57602090601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b906110ce6110c983611081565b61106d565b918252565b3d156110ed576110e23d6110bc565b903d6000602084013e565b606090565b156100e957565b906000916111096103f684610763565b73ffffffffffffffffffffffffffffffffffffffff82160361114c575090806100fb92339061113760405190565b90818003925af16111466110d3565b506110f2565b6100fb925061115a906106e0565b33906111d3565b906100fb9161105b565b61118461117e6101119263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b73ffffffffffffffffffffffffffffffffffffffff90911681526040810192916100fb9160200152565b6112166004926112076100fb956111ed63a9059cbb61116b565b926111f760405190565b96879460208601908152016111a9565b6020820181038252038361027e565b61130b565b61122560206110bc565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b61011161121b565b8015156100e2565b905051906100fb82611256565b906020828203126100e9576101119161125e565b1561128657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608490fd5b6100fb9161131b61132a926106e0565b9061132461124e565b9161136c565b805161133d6113396000610114565b9190565b1490811561134c575b5061127f565b6113669150602061135b825190565b81830101910161126b565b38611346565b610111929161137b6000610114565b9161140d565b1561138857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608490fd5b9060006101119493819261141f606090565b5061143661142c306106e0565b8390311015611381565b60208101905191855af16114486110d3565b916114b4565b1561145557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919290156114e6575081516114cc6113396000610114565b146114d5575090565b6114e1610111916114ec565b61144e565b826114fe565b3b6114fa6113396000610114565b1190565b90611507825190565b6115146113396000610114565b11156115235750805190602001fd5b6107f09061153060405190565b9182917f08c379a00000000000000000000000000000000000000000000000000000000083526004830161038a56fea164736f6c6343000814000a";

type PackageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PackageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Package__factory extends ContractFactory {
  constructor(...args: PackageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    market_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Package> {
    return super.deploy(
      name_,
      symbol_,
      market_,
      overrides || {}
    ) as Promise<Package>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    market_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, market_, overrides || {});
  }
  override attach(address: string): Package {
    return super.attach(address) as Package;
  }
  override connect(signer: Signer): Package__factory {
    return super.connect(signer) as Package__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PackageInterface {
    return new utils.Interface(_abi) as PackageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Package {
    return new Contract(address, _abi, signerOrProvider) as Package;
  }
}
