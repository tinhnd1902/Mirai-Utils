/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Factory,
  ERC721FactoryInterface,
} from "../../../contracts/utils/ERC721Factory";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523462000031576200001f6200001862000175565b906200019c565b604051611aa3620003b98239611aa390f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160401b0381116200006e57602090601f01601f19160190565b60005b838110620000be5750506000910152565b8181015183820152602001620000ad565b90929192620000e8620000e2826200008d565b62000074565b9381855260208501908284011162000031576200008b92620000aa565b9080601f83011215620000315781516200012292602001620000cf565b90565b919091604081840312620000315780516001600160401b0381116200003157836200015291830162000105565b60208201519093906001600160401b038111620000315762000122920162000105565b6200019862001e5c803803806200018c8162000074565b92833981019062000125565b9091565b906200008b916200039e565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620001e1575b6020831014620001db57565b620001a8565b91607f1691620001cf565b6200012262000122620001229290565b919062000211620001226200022993620001ec565b90835460001960089290920291821b191691901b1790565b9055565b6200008b91600091620001fc565b81811062000247575050565b806200025760006001936200022d565b016200023b565b9190601f81116200026e57505050565b620002826200008b93600052602060002090565b906020601f840181900483019310620002a6575b6020601f9091010401906200023b565b909150819062000296565b90620002bb815190565b906001600160401b0382116200006e57620002e382620002dc8554620001be565b856200025e565b602090601f831160011462000322576200022992916000918362000316575b5050600019600883021c1916906002021790565b01519050388062000302565b601f198316916200033885600052602060002090565b9260005b81811062000379575091600293918560019694106200035f575b50505002019055565b01516000196008601f8516021c1916905538808062000356565b919360206001819287870151815501950192016200033c565b906200008b91620002b1565b90620003b06200008b92600062000392565b60016200039256fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f257806306fdde03146100ed578063081812fc146100e8578063095ea7b3146100e357806323b872dd146100de57806340c10f19146100d957806342842e0e146100d45780636352211e146100cf57806370a08231146100ca57806395d89b41146100c5578063a22cb465146100c0578063b88d4fde146100bb578063c87b56dd146100b65763e985e9c5036101225761062b565b6105ed565b6105d1565b61044f565b6103fc565b6103d1565b6103a2565b610389565b610370565b610357565b610309565b61027b565b610214565b61014d565b7fffffffff0000000000000000000000000000000000000000000000000000000081165b0361012257565b600080fd5b90503590610134826100f7565b565b906020828203126101225761014a91610127565b90565b346101225761017b610168610163366004610136565b610647565b6040515b91829182901515815260200190565b0390f35b600091031261012257565b60005b83811061019d5750506000910152565b818101518382015260200161018d565b6101ce6101d76020936101ff936101c2815190565b80835293849260200190565b9586910161018a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b602080825261014a929101906101ad565b346101225761022436600461017f565b61017b61022f6109f4565b60405191829182610203565b8061011b565b905035906101348261023b565b906020828203126101225761014a91610241565b73ffffffffffffffffffffffffffffffffffffffff1690565b346101225761017b61029661029136600461024e565b610c9e565b6040519182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811661011b565b90503590610134826102bd565b91906040838203126101225761014a9061030081856102d9565b93602001610241565b346101225761032261031c3660046102e6565b90610bf9565b604051005b90916060828403126101225761014a61034084846102d9565b9361034e81602086016102d9565b93604001610241565b346101225761032261036a366004610327565b91610d81565b34610122576103226103833660046102e6565b90611924565b346101225761032261039c366004610327565b91610d9e565b346101225761017b6102966103b836600461024e565b6108a8565b906020828203126101225761014a916102d9565b346101225761017b6103ec6103e73660046103bd565b6107f8565b6040519182918290815260200190565b346101225761040c36600461017f565b61017b61022f6109fe565b80151561011b565b9050359061013482610417565b91906040838203126101225761014a9061044681856102d9565b9360200161041f565b346101225761032261046236600461042c565b90610cc3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff8211176104d757604052565b610468565b906101346104e960405190565b9283610497565b67ffffffffffffffff81116104d757602090601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b90826000939282370152565b9092919261054c610547826104f0565b6104dc565b93818552602085019082840111610122576101349261052b565b9080601f830112156101225781602061014a93359101610537565b906080828203126101225761059681836102d9565b926105a482602085016102d9565b926105b28360408301610241565b92606082013567ffffffffffffffff81116101225761014a9201610566565b34610122576103226105e4366004610581565b92919091610dae565b346101225761017b61022f61060336600461024e565b610a6e565b91906040838203126101225761014a9061062281856102d9565b936020016102d9565b346101225761017b610168610641366004610608565b90610cce565b7f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216149081156106a8575b811561069e575090565b61014a91506116f1565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f5b5e139f00000000000000000000000000000000000000000000000000000000149150610694565b61026261014a61014a9290565b61014a906106f4565b1561071157565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608490fd5b0390fd5b61026261014a61014a9273ffffffffffffffffffffffffffffffffffffffff1690565b61014a9061079a565b61014a906107bd565b906107d9906107c6565b600052602052604060002090565b61014a9081565b61014a90546107e7565b61083d61014a91610807600090565b506108366108186102626000610701565b73ffffffffffffffffffffffffffffffffffffffff8316141561070a565b60036107cf565b6107ee565b1561084957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6108b59060005b50610e73565b61014a6108c56102626000610701565b73ffffffffffffffffffffffffffffffffffffffff83161415610842565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b9060016002830492168015610932575b602083101461092d57565b6108e3565b91607f1691610922565b8054600093929161095961094f83610912565b8085529360200190565b91600181169081156109ab575060011461097257505050565b6109859192939450600052602060002090565b916000925b8184106109975750500190565b80548484015260209093019260010161098a565b92949550505060ff1916825215156020020190565b9061014a9161093c565b906101346109e4926109db60405190565b938480926109c0565b0383610497565b61014a906109ca565b61014a60006109eb565b61014a60016109eb565b61014a61014a61014a9290565b90610a22610547836104f0565b918252565b61014a6000610a15565b61014a610a27565b6101ff610a5192602092610a4b815190565b94859290565b9384910161018a565b610a689061014a9392610a39565b90610a39565b610a77816113c6565b610a7f610ad9565b8051610a92610a8e6000610a08565b9190565b1115610acf5761014a610ac391610aab61014a9461163a565b90610ab560405190565b938492602084019283610a5a565b90810382520382610497565b505061014a610a31565b61014a610a31565b15610ae857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b15610b7457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b9061013491610c6b610c0a836108a8565b610c4273ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff85161415610ae1565b3373ffffffffffffffffffffffffffffffffffffffff82168114918215610c70575b5050610b6d565b611261565b610c7a9250610cce565b3880610c64565b906107d990610a08565b61014a90610262565b61014a9054610c8b565b610cbe61014a91610cad600090565b50610cb7816113c6565b6004610c81565b610c94565b610134919033611331565b61014a91610ce9610cee92610ce1600090565b5060056107cf565b6107cf565b5460ff1690565b15610cfc57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608490fd5b610134929190610d99610d948433610e8a565b610cf5565b61111d565b909161013492610dac610a31565b925b61013493929190610dc2610d948433610e8a565b610e54565b15610dce57565b6040515b7f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b916101349391610e6e93610e6983838361111d565b611475565b610dc7565b610cbe61014a91610e82600090565b506002610c81565b610e93826108a8565b9173ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff831614928315610f21575b508215610ed757505090565b610f1d919250610ee9610f0391610c9e565b9273ffffffffffffffffffffffffffffffffffffffff1690565b9173ffffffffffffffffffffffffffffffffffffffff1690565b1490565b610f2e9193508290610cce565b9138610ecb565b15610f3c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608490fd5b15610fc857565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608490fd5b9190600861107891029161107373ffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9181191691161790565b919061109361014a61109b936107c6565b90835461104c565b9055565b61013491600091611082565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90611078565b906110e361014a61109b92610a08565b82546110ab565b9073ffffffffffffffffffffffffffffffffffffffff90611078565b9061111661014a61109b926107c6565b82546110ea565b919061115061112b836108a8565b61114a73ffffffffffffffffffffffffffffffffffffffff8616610f03565b14610f35565b6111bd600061118261116461026283610701565b73ffffffffffffffffffffffffffffffffffffffff85161415610fc1565b6111ad61118e856108a8565b61114a73ffffffffffffffffffffffffffffffffffffffff8816610f03565b6111b8846004610c81565b61109f565b6112016111ca6001610a08565b6111f16111f7846003610ce96111e08a836107cf565b6111f1876111ed836107ee565b0390565b906110d3565b916101ff836107ee565b61121581611210846002610c81565b611106565b61125161124b6112457fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef956107c6565b926107c6565b92610a08565b9261125b60405190565b600090a4565b9061127182611210836004610c81565b61127a816108a8565b9161125161124b6112457f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925956107c6565b156112b257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b9060ff90611078565b9061132a61014a61109b92151590565b8254611311565b61136973ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff831614156112ab565b6113818361137c84610ce98560056107cf565b61131a565b6113c16113b76113b17f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31936107c6565b936107c6565b9361016c60405190565b0390a3565b6113d2610134916113d7565b610842565b6113e29060006108af565b6113f2610f036102626000610701565b141590565b90505190610134826100f7565b906020828203126101225761014a916113f7565b73ffffffffffffffffffffffffffffffffffffffff918216815291166020820152604081019190915260806060820181905261014a929101906101ad565b3d15611470576114653d610a15565b903d6000602084013e565b606090565b91909392611481600090565b9461148b816115a4565b1561159a57906114d260006114aa6114a5602096956107c6565b6107c6565b926114dd63150b7a02916114bb3390565b966114c560405190565b998a988997889660e01b90565b865260048601611418565b03925af16000918161156a575b5061151c57506114f8611456565b8051611507610a8e6000610a08565b0361151457604051610dd2565b805190602001fd5b909150610f1d7f150b7a02000000000000000000000000000000000000000000000000000000005b917fffffffff000000000000000000000000000000000000000000000000000000001690565b61158c91925060203d8111611593575b6115848183610497565b810190611404565b90386114ea565b503d61157a565b5060019450505050565b3b6115b2610a8e6000610a08565b1190565b369037565b906101346115d16115cb84610a15565b936104f0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001602084016115b6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8115611635570490565b6115fc565b6116438161171a565b906116536001926101ff84610a08565b918061165e846115bb565b936020018401905b611671575b50505090565b6116d0907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01927f3031323334353637383961626364656600000000000000000000000000000000600a82061a84536116ca600a610a08565b9061162b565b90816116df610a8e6000610a08565b146116ec57909181611666565b61166b565b610f1d7f01ffc9a700000000000000000000000000000000000000000000000000000000611544565b6117246000610a08565b907a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000061174a81610a08565b82101561189c575b506d04ee2d6d415b85acef810000000061176b81610a08565b82101561187a575b50662386f26fc1000061178581610a08565b821015611858575b506305f5e10061179c81610a08565b821015611836575b506127106117b181610a08565b821015611814575b5060646117c581610a08565b8210156117f2575b506117db610a8e600a610a08565b10156117e45790565b61014a906101ff6001610a08565b61180d916116ca61180292610a08565b916101ff6002610a08565b90386117cd565b61182f916116ca61182492610a08565b916101ff6004610a08565b90386117b9565b611851916116ca61184692610a08565b916101ff6008610a08565b90386117a4565b611873916116ca61186892610a08565b916101ff6010610a08565b903861178d565b611895916116ca61188a92610a08565b916101ff6020610a08565b9038611773565b6118b7916116ca6118ac92610a08565b916101ff6040610a08565b9038611752565b156118c557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a206e6f6e6578697374656e7420746f6b656e000000000000006044820152606490fd5b906101349161193b611935836113d7565b156118be565b611a10565b1561194757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815280610796600482016020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b156119b157565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b90611a1b6000610701565b91611a5473ffffffffffffffffffffffffffffffffffffffff841673ffffffffffffffffffffffffffffffffffffffff83161415611940565b611a6c611a67611a63846113d7565b1590565b6119aa565b611a7b611a67611a63846113d7565b611201611a886001610a08565b6111f16111f78460036107cf56fea164736f6c6343000814000a";

type ERC721FactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721FactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Factory__factory extends ContractFactory {
  constructor(...args: ERC721FactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Factory> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<ERC721Factory>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721Factory {
    return super.attach(address) as ERC721Factory;
  }
  override connect(signer: Signer): ERC721Factory__factory {
    return super.connect(signer) as ERC721Factory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721FactoryInterface {
    return new utils.Interface(_abi) as ERC721FactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Factory {
    return new Contract(address, _abi, signerOrProvider) as ERC721Factory;
  }
}
