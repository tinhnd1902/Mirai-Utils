/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WrapMRC721UpgradeableTest,
  WrapMRC721UpgradeableTestInterface,
} from "../../../contracts/utils/WrapMRC721UpgradeableTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRANSFER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "version_",
        type: "string",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IMRC721.TransferRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "transferWithPermit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "updateBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "updateTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523461001a5760405161385e610020823961385e90f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062bf26f4146101f157806301ffc9a7146101ec57806306fdde03146101e7578063081812fc146101e2578063095ea7b3146101dd57806318e97fd1146101d857806323b872dd146101d3578063248a9ca3146101ce5780632f2ff15d146101c957806336568abe146101c457806340c10f19146101bf57806342842e0e146101ba5780634f558e79146101b5578063589c158e146101b05780635c6d8da1146101ab5780636352211e146101a65780636c0360eb146101a157806370a082311461019c5780637ecebe001461019757806384b0196e1461019257806391d148541461018d578063931688cb1461018857806395d89b4114610183578063a217fddf1461017e578063a22cb46514610179578063b88d4fde14610174578063c87b56dd1461016f578063d53913931461016a578063d547741f146101655763e985e9c50361020157610d63565b610d30565b610cf7565b610cdc565b610cc0565b610c57565b610c04565b610bca565b610bb2565b610b70565b610b3c565b610a2a565b610995565b610966565b6107f2565b6107d6565b610741565b6106c5565b6106ac565b610690565b610677565b61065e565b610620565b610607565b6105be565b610451565b6103c3565b61035c565b6102a4565b61020f565b600091031261020157565b600080fd5b90565b9052565b565b346102015761021f3660046101f6565b6102547fdf2fb49a1f69c8a73b114786b259dbb4a030c6bfe9099db7004c26857f8df6c75b6040519182918290815260200190565b0390f35b7fffffffff0000000000000000000000000000000000000000000000000000000081165b0361020157565b9050359061020d82610258565b906020828203126102015761020691610283565b34610201576102546102bf6102ba366004610290565b6131ea565b6040515b91829182901515815260200190565b60005b8381106102e55750506000910152565b81810151838201526020016102d5565b61031661031f6020936103479361030a815190565b80835293849260200190565b958691016102d2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b6020808252610206929101906102f5565b346102015761036c3660046101f6565b6102546103776112c9565b6040519182918261034b565b8061027c565b9050359061020d82610383565b906020828203126102015761020691610389565b73ffffffffffffffffffffffffffffffffffffffff1690565b34610201576102546103de6103d9366004610396565b61149a565b6040519182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811661027c565b9050359061020d82610405565b919060408382031261020157610206906104488185610421565b93602001610389565b346102015761046a61046436600461042e565b906113f5565b604051005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff8211176104de57604052565b61046f565b9061020d6104f060405190565b928361049e565b67ffffffffffffffff81116104de57602090601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b90826000939282370152565b9092919261055361054e826104f7565b6104e3565b938185526020850190828401116102015761020d92610532565b9080601f83011215610201578160206102069335910161053e565b9190916040818403126102015761059f8382610389565b92602082013567ffffffffffffffff811161020157610206920161056d565b346102015761046a6105d1366004610588565b90613847565b9091606082840312610201576102066105f08484610421565b936105fe8160208601610421565b93604001610389565b346102015761046a61061a3660046105d7565b91611576565b3461020157610254610244610636366004610396565b610dd3565b919060408382031261020157610206906106558185610389565b93602001610421565b346102015761046a61067136600461063b565b90610e0a565b346102015761046a61068a36600461063b565b90611007565b34610201576102546102bf6106a636600461042e565b9061308e565b346102015761046a6106bf3660046105d7565b916115b7565b34610201576102546102bf6106db366004610396565b612a4f565b908160a09103126102015790565b60ff811661027c565b9050359061020d826106ee565b610100818303126102015761071982826106e0565b9261020661072a8460a085016106f7565b936107388160c08601610389565b9360e001610389565b34610201576102546102bf610757366004610704565b9291909161249f565b60808183031261020157803567ffffffffffffffff8111610201578261078791830161056d565b92602082013567ffffffffffffffff811161020157836107a891840161056d565b9260408301359067ffffffffffffffff8211610201576107cd8161020693860161056d565b93606001610421565b346102015761046a6107e9366004610760565b92919091612c89565b34610201576102546103de610808366004610396565b611285565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b906001600283049216801561088b575b602083101461088657565b61083c565b91607f169161087b565b805460009392916108b26108a88361086b565b8085529360200190565b916001811690811561090457506001146108cb57505050565b6108de9192939450600052602060002090565b916000925b8184106108f05750500190565b8054848401526020909301926001016108e3565b92949550505060ff1916825215156020020190565b9061020691610895565b9061020d61093d9261093460405190565b93848092610919565b038361049e565b906000106109555761020690610923565b61080d565b610206600060fe610944565b34610201576109763660046101f6565b61025461037761095a565b906020828203126102015761020691610421565b34610201576102546102446109ab366004610981565b6111d5565b6103aa6102066102069273ffffffffffffffffffffffffffffffffffffffff1690565b610206906109b0565b610206906109d3565b906109ef906109dc565b600052602052604060002090565b610206916008021c81565b9061020691546109fd565b61020690610a2560cb916000926109e5565b610a08565b3461020157610254610244610a40366004610981565b610a13565b90610a65610a5e610a54845190565b8084529260200190565b9260200190565b9060005b818110610a765750505090565b909192610a93610a8c6001928651815260200190565b9460200190565b929101610a69565b93959194610b0b610b03610b2f95610af5610b28956102069c9a610ae860e08c019260008d01907fff00000000000000000000000000000000000000000000000000000000000000169052565b8a820360208c01526102f5565b9088820360408a01526102f5565b976060870152565b73ffffffffffffffffffffffffffffffffffffffff166080850152565b60a0830152565b60c0818403910152610a45565b3461020157610b4c3660046101f6565b610254610b57612195565b93610b6797959793919360405190565b97889788610a9b565b34610201576102546102bf610b8636600461063b565b90610d9a565b9060208282031261020157813567ffffffffffffffff811161020157610206920161056d565b346102015761046a610bc5366004610b8c565b61380e565b3461020157610bda3660046101f6565b6102546103776112d3565b6102066102066102069290565b6102066000610be5565b610206610bf2565b3461020157610c143660046101f6565b610254610244610bfc565b80151561027c565b9050359061020d82610c1f565b91906040838203126102015761020690610c4e8185610421565b93602001610c27565b346102015761046a610c6a366004610c34565b906114bf565b9060808282031261020157610c858183610421565b92610c938260208501610421565b92610ca18360408301610389565b92606082013567ffffffffffffffff811161020157610206920161056d565b346102015761046a610cd3366004610c70565b929190916115c7565b3461020157610254610377610cf2366004610396565b613456565b3461020157610d073660046101f6565b6102547fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e610244565b346102015761046a610d4336600461063b565b90610f71565b919060408382031261020157610206906106558185610421565b34610201576102546102bf610d79366004610d49565b906114ca565b906109ef565b610206905b60ff1690565b6102069054610d85565b610206916000610db7610dbd93610daf600090565b5060cc610d7f565b016109e5565b610d90565b6102069081565b6102069054610dc2565b6001610de461020692610daf600090565b01610dc9565b9061020d91610e00610dfb82610dd3565b610e14565b9061020d91611064565b9061020d91610dea565b61020d903390610eb0565b61020690610be5565b610347610e4092602092610e3a815190565b94859290565b938491016102d2565b610e876102069392610e81610e81937f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260170190565b90610e28565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000815260110190565b90610ec2610ebe8284610d9a565b1590565b610eca575050565b610f5291610206610ee6610ee0610f20946120c7565b92610e1f565b610efb602091610ef583610be5565b90611f3e565b92610f14610f0860405190565b94859384019283610e49565b9081038252038261049e565b6040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526004830161034b565b0390fd5b9061020d91610f67610dfb82610dd3565b9061020d916110db565b9061020d91610f56565b15610f8257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608490fd5b61020d9190611035611018336103aa565b73ffffffffffffffffffffffffffffffffffffffff841614610f7b565b6110db565b9060ff905b9181191691161790565b9061105961020661106092151590565b825461103a565b9055565b90611072610ebe8284610d9a565b61107a575050565b6110956001611090836000610db78760cc610d7f565b611049565b33906110cb6110c56110c57f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9590565b926109dc565b926110d560405190565b600090a4565b906110e68183610d9a565b6110ee575050565b61110360006110908382610db78760cc610d7f565b33906110cb6110c56110c57ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9590565b6103aa6102066102069290565b61020690611133565b1561115057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608490fd5b61121a610206916111e4600090565b506112136111f56103aa6000611140565b73ffffffffffffffffffffffffffffffffffffffff83161415611149565b60686109e5565b610dc9565b1561122657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6112929060005b5061168c565b6102066112a26103aa6000611140565b73ffffffffffffffffffffffffffffffffffffffff8316141561121f565b61020690610923565b61020660656112c0565b61020660666112c0565b156112e457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b1561137057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b9061020d9161146761140683611285565b61143e73ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff851614156112dd565b3373ffffffffffffffffffffffffffffffffffffffff8216811491821561146c575b5050611369565b611a56565b61147692506114ca565b3880611460565b906109ef90610be5565b610206906103aa565b6102069054611487565b6114ba610206916114a9600090565b506114b381611b96565b606961147d565b611490565b61020d919033611b06565b610206916114e5610dbd926114dd600090565b50606a6109e5565b6109e5565b156114f157565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608490fd5b61020d92919061158e61158984336116a3565b6114ea565b611928565b906115a061054e836104f7565b918252565b6102066000611593565b6102066115a5565b909161020d926115c56115af565b925b61020d939291906115db61158984336116a3565b61166d565b156115e757565b6040515b7f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b9161020d939161168793611682838383611928565b611c59565b6115e0565b6114ba6102069161169b600090565b50606761147d565b6116ac82611285565b9173ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff83161492831561173a575b5082156116f057505090565b61173691925061170261171c9161149a565b9273ffffffffffffffffffffffffffffffffffffffff1690565b9173ffffffffffffffffffffffffffffffffffffffff1690565b1490565b61174791935082906114ca565b91386116e4565b1561175557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608490fd5b156117e157565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608490fd5b9190600861103f91029161188c73ffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b91906118a2610206611060936109dc565b908354611865565b61020d91600091611891565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9061103f565b906118ee61020661106092610be5565b82546118b6565b9073ffffffffffffffffffffffffffffffffffffffff9061103f565b90611921610206611060926109dc565b82546118f5565b919061195b61193683611285565b61195573ffffffffffffffffffffffffffffffffffffffff861661171c565b1461174e565b6119c8600061198d61196f6103aa83611140565b73ffffffffffffffffffffffffffffffffffffffff851614156117da565b6119b861199985611285565b61195573ffffffffffffffffffffffffffffffffffffffff881661171c565b6119c384606961147d565b6118aa565b611a0c6119d56001610be5565b6119fc611a028460686114e56119eb8a836109e5565b6119fc876119f883610dc9565b0390565b906118de565b9161034783610dc9565b611a2081611a1b84606761147d565b611911565b6110cb611a506110c57fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef956109dc565b92610be5565b90611a6682611a1b83606961147d565b611a6f81611285565b916110cb611a506110c57f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925956109dc565b15611aa757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b611b3e73ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff83161415611aa0565b611b5183611090846114e585606a6109e5565b611b91611b87611b817f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31936109dc565b936109dc565b936102c360405190565b0390a3565b611ba261020d91611ba7565b61121f565b611bb290600061128c565b611bc261171c6103aa6000611140565b141590565b9050519061020d82610258565b906020828203126102015761020691611bc7565b73ffffffffffffffffffffffffffffffffffffffff918216815291166020820152610206926080820192909190611c21905b6040830152565b60608184039101526102f5565b6040513d6000823e3d90fd5b3d15611c5457611c493d611593565b903d6000602084013e565b606090565b91909392611c65600090565b94611c6f81611d8c565b15611d825790611cb66000611c8e611c89602096956109dc565b6109dc565b92611cc163150b7a0291611c9f3390565b96611ca960405190565b998a988997889660e01b90565b865260048601611be8565b03925af160009181611d52575b50611d045750611cdc611c3a565b8051611cef611ceb6000610be5565b9190565b03611cfc576040516115eb565b805190602001fd5b9091506117367f150b7a02000000000000000000000000000000000000000000000000000000005b917fffffffff000000000000000000000000000000000000000000000000000000001690565b611d7491925060203d8111611d7b575b611d6c818361049e565b810190611bd4565b9038611cce565b503d611d62565b5060019450505050565b3b611d9a611ceb6000610be5565b1190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810292918115918404141715611de057565b611d9e565b91908201809211611de057565b369037565b9061020d611e0d611e0784611593565b936104f7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401611df2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90611e70825190565b811015611e7e570160200190565b611e38565b8015611de0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b610d8a6102066102069290565b61020690611ecf611ceb6102069460ff1690565b901c90565b15611edb57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815280610f52600482016020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b9190600292611f6f611f6a611f5b84611f5688610be5565b611dcd565b611f6487610be5565b90611de5565b611df7565b916000906030611f87611f8184610be5565b86611e67565b53611fdb611fd27f780000000000000000000000000000000000000000000000000000000000000092611f566001998a95871a611fcc611fc688610be5565b8b611e67565b53610be5565b611f6483610be5565b905b611fff575b5061020693945090611ff9611ceb61020693610be5565b14611ed4565b9161200986610be5565b831115612084577f303132333435363738396162636465660000000000000000000000000000000061203b600f610be5565b8216906010821015611e7e57879261205b6120789261207e941a60f81b90565b851a6120678789611e67565b536120726004611eae565b90611ebb565b93611e83565b90611fdd565b91611fe2565b6102066102066102069273ffffffffffffffffffffffffffffffffffffffff1690565b6102066014611eae565b6102066102066102069260ff1690565b6120e46120df610206926120d9606090565b506109d3565b61208a565b610ef56120ef6120ad565b6120b7565b156120fb57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4549503731323a20556e696e697469616c697a656400000000000000000000006044820152606490fd5b67ffffffffffffffff81116104de5760208091020190565b906115a061054e8361215a565b9061020d611e0d61218f84612172565b9361215a565b61219f6097610dc9565b906000916121af611ceb84610be5565b1480612220575b6121bf906120f4565b6121c7612242565b916121d061224c565b9146916121dc306109dc565b916121f76121f26121ec84610be5565b93610be5565b61217f565b7f0f00000000000000000000000000000000000000000000000000000000000000969594939291565b506121bf61222e6098610dc9565b61223a611ceb85610be5565b1490506121b6565b61020660996112c0565b610206609a6112c0565b3561020681610383565b1561226757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4d49503731323a204558504952454400000000000000000000000000000000006044820152606490fd5b90610206949392916122ef6122dd60808401612256565b6122e8611ceb429290565b1115612260565b61239f565b3561020681610405565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611de05760010190565b919461239461239b9298979561238d60a09661237061020d9a61235360c08a019e60008b0152565b73ffffffffffffffffffffffffffffffffffffffff166020890152565b73ffffffffffffffffffffffffffffffffffffffff166040870152565b6060850152565b6080830152565b0152565b509291907fdf2fb49a1f69c8a73b114786b259dbb4a030c6bfe9099db7004c26857f8df6c79284926123d0846122f4565b9560208101966123df886122f4565b9060408301976123ee89612256565b9360cb6123fa8a6122f4565b612403916109e5565b9061240d82610dc9565b91612417836122fe565b612420916118de565b60800161242c90612256565b9061243660405190565b9586956020870195612448958761232b565b908103825203612458908261049e565b8051906020012092612469856122f4565b9361247394612513565b61247c906122f4565b91612486906122f4565b9061249090612256565b9061249a92611928565b600190565b6102069392919060006122c6565b156124b457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d49503731323a20494e56414c49445f5349474e4154555245000000000000006044820152606490fd5b9261252a9261252561020d9693612890565b612588565b6125376103aa6000611140565b73ffffffffffffffffffffffffffffffffffffffff82161415918261255e575b50506124ad565b9091506125809073ffffffffffffffffffffffffffffffffffffffff1661171c565b143880612557565b9161020693916125a09361259a600090565b506127c1565b9190916125f0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600511156125e157565b6125a8565b9061020d826125d7565b6125fa60006125e6565b612603826125e6565b0361260b5750565b61261560016125e6565b61261e826125e6565b03612682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b61268c60026125e6565b612695826125e6565b036126f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b61270c61270660036125e6565b916125e6565b1461271357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b61239b61020d94611c1a6060949897956127b7608086019a6000870152565b60ff166020850152565b9192916127cd83610e1f565b6127f9611ceb7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0610be5565b1161287c5761281960009360209561281060405190565b94859485612798565b838052039060015afa15612877576000519060009161283783611140565b73ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff83161461286f57509190565b925050600190565b611c2e565b5050505061288a6000611140565b90600390565b6102069061289c6128d4565b604291604051917f19010000000000000000000000000000000000000000000000000000000000008352600283015260228201522090565b610206612931565b9095949261020d9461290e6129159261290760809661290060a088019c6000890152565b6020870152565b6040850152565b6060830152565b019073ffffffffffffffffffffffffffffffffffffffff169052565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61298b61295d6129a1565b612965612a12565b92610f1446612973306109dc565b9061297d60405190565b9687956020870195866128dc565b61299d612996825190565b9160200190565b2090565b6129ac610206612242565b80516000906129bd611ceb83610be5565b11156129cf575061299d612996825190565b90506129e46129de6097610dc9565b91610be5565b81146129ed5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612a1d61020661224c565b8051600090612a2e611ceb83610be5565b1115612a40575061299d612996825190565b90506129e46129de6098610dc9565b61020690611ba7565b6102069060081c610d8a565b6102069054612a58565b15612a7557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b610d8a6102066102069260ff1690565b9061105961020661106092612afa565b9061ff009060081b61103f565b90612b3761020661106092151590565b8254612b1a565b61020990611eae565b60208101929161020d9190612b3e565b92612ba29192612b6a610ebe6000612a64565b938480612c45575b8015612c00575b612b8290612a6e565b60019585612b99612b9289611eae565b6000612b0a565b612bf057612c63565b612ba95750565b612bb4600080612b27565b612beb7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249891612be260405190565b91829182612b47565b0390a1565b612bfb876000612b27565b612c63565b50612c15610ebe612c10306109dc565b611d8c565b8015612b795750612b82612c296000610d90565b612c3d612c366001611eae565b9160ff1690565b149050612b79565b50612c506000610d90565b612c5d612c366001611eae565b10612b72565b91612c729161020d9493612dac565b612c7a610bf2565b612c848180612ca3565b611064565b9061020d939291612b57565b906118ee6102066110609290565b90612cad82610dd3565b612cc4826001612cbe8660cc610d7f565b01612c95565b6110cb612cf2612cf27fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9590565b9290565b15612cfd57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608490fd5b9061020d9291612d9a612d956000612a64565b612cf6565b612da761020d938261300d565b612dd3565b9061020d9291612d82565b9061020d91612dc9612d956000612a64565b9061020d91612fe7565b9061020d91612db7565b9061020d91612def612d956000612a64565b612fd1565b9190600861103f91029161188c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b9190612e3861020661106093610be5565b908354612df4565b61020d91600091612e27565b818110612e57575050565b80612e656000600193612e40565b01612e4c565b9190601f8111612e7a57505050565b612e8c61020d93600052602060002090565b906020601f840181900483019310612eae575b6020601f909101040190612e4c565b9091508190612e9f565b90612ec1815190565b9067ffffffffffffffff82116104de57612ee582612edf855461086b565b85612e6b565b602090601f8311600114612f3e57611060929160009183612f33575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600883021c1916906002021790565b015190503880612f01565b601f19831691612f5385600052602060002090565b9260005b818110612faf57509160029391856001969410612f78575b50505002019055565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6008601f8516021c19169055388080612f6f565b91936020600181928787015181550195019201612f57565b9061020d91612eb8565b90612fe061020d926065612fc7565b6066612fc7565b9061020d91612ddd565b9061020d91613003612d956000612a64565b9061020d91613033565b9061020d91612ff1565b9061020d91613029612d956000612a64565b9061020d91613084565b9061020d91613017565b9061020d9161304f612d956000612a64565b9061305e613065926099612fc7565b609a612fc7565b61020d6130726000610be5565b61307d816097612c95565b6098612c95565b9061020d9161303d565b61249a9190613168565b1561309f57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815280610f52600482016020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b1561310957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b906131736000611140565b916131ac73ffffffffffffffffffffffffffffffffffffffff841673ffffffffffffffffffffffffffffffffffffffff83161415613098565b6131c06131bb610ebe84611ba7565b613102565b6131cf6131bb610ebe84611ba7565b611a0c6131dc6001610be5565b6119fc611a028460686109e5565b610206907f7965db0b000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000082161490811561323e575090565b61020691507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216149081156132a4575b811561329a575090565b61020691506132f0565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f5b5e139f00000000000000000000000000000000000000000000000000000000149150613290565b6117367f01ffc9a700000000000000000000000000000000000000000000000000000000611d2c565b1561332057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5065676156323a20717565727920666f72206e6f6e6578697374656e7420746f60448201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152608490fd5b610206905461086b565b805460009392916133c66133c28361086b565b9390565b916001811690811561341757506001146133df57505050565b6133f29192939450600052602060002090565b6000905b8382106134035750500190565b6001816020925484860152019101906133f6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b610e819061020693926133af565b61346761346282611ba7565b613319565b60ff61347e613479610206848461147d565b6133a5565b61348b611ceb6000610be5565b11156134a3576102069161349e9161147d565b6112c0565b50610f14610206610206926134b960fe9161350f565b906134c360405190565b938492602084019283613448565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b811561350a570490565b6134d1565b613518816135c6565b9061352860019261034784610be5565b918061353384611df7565b936020018401905b613546575b50505090565b6135a5907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01927f3031323334353637383961626364656600000000000000000000000000000000600a82061a845361359f600a610be5565b90613500565b90816135b4611ceb6000610be5565b146135c15790918161353b565b613540565b6135d06000610be5565b907a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000006135f681610be5565b821015613748575b506d04ee2d6d415b85acef810000000061361781610be5565b821015613726575b50662386f26fc1000061363181610be5565b821015613704575b506305f5e10061364881610be5565b8210156136e2575b5061271061365d81610be5565b8210156136c0575b50606461367181610be5565b82101561369e575b50613687611ceb600a610be5565b10156136905790565b610206906103476001610be5565b6136b99161359f6136ae92610be5565b916103476002610be5565b9038613679565b6136db9161359f6136d092610be5565b916103476004610be5565b9038613665565b6136fd9161359f6136f292610be5565b916103476008610be5565b9038613650565b61371f9161359f61371492610be5565b916103476010610be5565b9038613639565b6137419161359f61373692610be5565b916103476020610be5565b903861361f565b6137639161359f61375892610be5565b916103476040610be5565b90386135fe565b61020d90613779610dfb610bf2565b6137e4565b1561378557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f696e76616c6964205552490000000000000000000000000000000000000000006044820152606490fd5b61020d906138076137f3825190565b613800611ceb6000610be5565b141561377e565b60fe612fc7565b61020d9061376a565b9061020d91613827610dfb610bf2565b9061384261020d9261383b61346282611ba7565b60ff61147d565b612fc7565b9061020d9161381756fea164736f6c6343000814000a";

type WrapMRC721UpgradeableTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrapMRC721UpgradeableTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrapMRC721UpgradeableTest__factory extends ContractFactory {
  constructor(...args: WrapMRC721UpgradeableTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WrapMRC721UpgradeableTest> {
    return super.deploy(overrides || {}) as Promise<WrapMRC721UpgradeableTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WrapMRC721UpgradeableTest {
    return super.attach(address) as WrapMRC721UpgradeableTest;
  }
  override connect(signer: Signer): WrapMRC721UpgradeableTest__factory {
    return super.connect(signer) as WrapMRC721UpgradeableTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrapMRC721UpgradeableTestInterface {
    return new utils.Interface(_abi) as WrapMRC721UpgradeableTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WrapMRC721UpgradeableTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WrapMRC721UpgradeableTest;
  }
}
