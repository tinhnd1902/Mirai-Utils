/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721,
  ERC721Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC721/ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523462000031576200001f6200001862000175565b9062000392565b60405161189e620003ad823961189e90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160401b0381116200006e57602090601f01601f19160190565b60005b838110620000be5750506000910152565b8181015183820152602001620000ad565b90929192620000e8620000e2826200008d565b62000074565b9381855260208501908284011162000031576200008b92620000aa565b9080601f83011215620000315781516200012292602001620000cf565b90565b919091604081840312620000315780516001600160401b0381116200003157836200015291830162000105565b60208201519093906001600160401b038111620000315762000122920162000105565b6200019862001c4b803803806200018c8162000074565b92833981019062000125565b9091565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620001d5575b6020831014620001cf57565b6200019c565b91607f1691620001c3565b6200012262000122620001229290565b919062000205620001226200021d93620001e0565b90835460001960089290920291821b191691901b1790565b9055565b6200008b91600091620001f0565b8181106200023b575050565b806200024b600060019362000221565b016200022f565b9190601f81116200026257505050565b620002766200008b93600052602060002090565b906020601f8401819004830193106200029a575b6020601f9091010401906200022f565b90915081906200028a565b90620002af815190565b906001600160401b0382116200006e57620002d782620002d08554620001b2565b8562000252565b602090601f831160011462000316576200021d9291600091836200030a575b5050600019600883021c1916906002021790565b015190503880620002f6565b601f198316916200032c85600052602060002090565b9260005b8181106200036d5750916002939185600196941062000353575b50505002019055565b01516000196008601f8516021c191690553880806200034a565b9193602060018192878701518155019501920162000330565b906200008b91620002a5565b90620003a46200008b92600062000386565b60016200038656fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100e257806306fdde03146100dd578063081812fc146100d8578063095ea7b3146100d357806323b872dd146100ce57806342842e0e146100c95780636352211e146100c457806370a08231146100bf57806395d89b41146100ba578063a22cb465146100b5578063b88d4fde146100b0578063c87b56dd146100ab5763e985e9c50361011257610602565b6105c4565b6105a8565b610426565b6103d3565b6103a8565b610379565b610360565b610347565b6102f9565b61026b565b610204565b61013d565b7fffffffff0000000000000000000000000000000000000000000000000000000081165b0361011257565b600080fd5b90503590610124826100e7565b565b906020828203126101125761013a91610117565b90565b346101125761016b610158610153366004610126565b61061e565b6040515b91829182901515815260200190565b0390f35b600091031261011257565b60005b83811061018d5750506000910152565b818101518382015260200161017d565b6101be6101c76020936101ef936101b2815190565b80835293849260200190565b9586910161017a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b602080825261013a9291019061019d565b346101125761021436600461016f565b61016b61021f6109c7565b604051918291826101f3565b8061010b565b905035906101248261022b565b906020828203126101125761013a91610231565b73ffffffffffffffffffffffffffffffffffffffff1690565b346101125761016b61028661028136600461023e565b610c71565b6040519182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811661010b565b90503590610124826102ad565b91906040838203126101125761013a906102f081856102c9565b93602001610231565b346101125761031261030c3660046102d6565b90610bcc565b604051005b90916060828403126101125761013a61033084846102c9565b9361033e81602086016102c9565b93604001610231565b346101125761031261035a366004610317565b91610d54565b3461011257610312610373366004610317565b91610d71565b346101125761016b61028661038f36600461023e565b61087b565b906020828203126101125761013a916102c9565b346101125761016b6103c36103be366004610394565b6107cb565b6040519182918290815260200190565b34610112576103e336600461016f565b61016b61021f6109d1565b80151561010b565b90503590610124826103ee565b91906040838203126101125761013a9061041d81856102c9565b936020016103f6565b3461011257610312610439366004610403565b90610c96565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff8211176104ae57604052565b61043f565b906101246104c060405190565b928361046e565b67ffffffffffffffff81116104ae57602090601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b90826000939282370152565b9092919261052361051e826104c7565b6104b3565b938185526020850190828401116101125761012492610502565b9080601f830112156101125781602061013a9335910161050e565b906080828203126101125761056d81836102c9565b9261057b82602085016102c9565b926105898360408301610231565b92606082013567ffffffffffffffff81116101125761013a920161053d565b34610112576103126105bb366004610558565b92919091610d81565b346101125761016b61021f6105da36600461023e565b610a41565b91906040838203126101125761013a906105f981856102c9565b936020016102c9565b346101125761016b6101586106183660046105df565b90610ca1565b7f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000082161490811561067f575b8115610675575090565b61013a91506116c4565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f5b5e139f0000000000000000000000000000000000000000000000000000000014915061066b565b61025261013a61013a9290565b61013a906106cb565b156106e857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608490fd5b61025261013a61013a9273ffffffffffffffffffffffffffffffffffffffff1690565b61013a9061076d565b61013a90610790565b906107ac90610799565b600052602052604060002090565b61013a9081565b61013a90546107ba565b61081061013a916107da600090565b506108096107eb61025260006106d8565b73ffffffffffffffffffffffffffffffffffffffff831614156106e1565b60036107a2565b6107c1565b1561081c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6108889060005b50610e46565b61013a61089861025260006106d8565b73ffffffffffffffffffffffffffffffffffffffff83161415610815565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b9060016002830492168015610905575b602083101461090057565b6108b6565b91607f16916108f5565b8054600093929161092c610922836108e5565b8085529360200190565b916001811690811561097e575060011461094557505050565b6109589192939450600052602060002090565b916000925b81841061096a5750500190565b80548484015260209093019260010161095d565b92949550505060ff1916825215156020020190565b9061013a9161090f565b906101246109b7926109ae60405190565b93848092610993565b038361046e565b61013a9061099d565b61013a60006109be565b61013a60016109be565b61013a61013a61013a9290565b906109f561051e836104c7565b918252565b61013a60006109e8565b61013a6109fa565b6101ef610a2492602092610a1e815190565b94859290565b9384910161017a565b610a3b9061013a9392610a0c565b90610a0c565b610a4a81611399565b610a52610aac565b8051610a65610a6160006109db565b9190565b1115610aa25761013a610a9691610a7e61013a9461160d565b90610a8860405190565b938492602084019283610a2d565b9081038252038261046e565b505061013a610a04565b61013a610a04565b15610abb57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b15610b4757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b9061012491610c3e610bdd8361087b565b610c1573ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff85161415610ab4565b3373ffffffffffffffffffffffffffffffffffffffff82168114918215610c43575b5050610b40565b611234565b610c4d9250610ca1565b3880610c37565b906107ac906109db565b61013a90610252565b61013a9054610c5e565b610c9161013a91610c80600090565b50610c8a81611399565b6004610c54565b610c67565b610124919033611304565b61013a91610cbc610cc192610cb4600090565b5060056107a2565b6107a2565b5460ff1690565b15610ccf57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608490fd5b610124929190610d6c610d678433610e5d565b610cc8565b6110f0565b909161012492610d7f610a04565b925b61012493929190610d95610d678433610e5d565b610e27565b15610da157565b6040515b7f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b916101249391610e4193610e3c8383836110f0565b611448565b610d9a565b610c9161013a91610e55600090565b506002610c54565b610e668261087b565b9173ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff831614928315610ef4575b508215610eaa57505090565b610ef0919250610ebc610ed691610c71565b9273ffffffffffffffffffffffffffffffffffffffff1690565b9173ffffffffffffffffffffffffffffffffffffffff1690565b1490565b610f019193508290610ca1565b9138610e9e565b15610f0f57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608490fd5b15610f9b57565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608490fd5b9190600861104b91029161104673ffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9181191691161790565b919061106661013a61106e93610799565b90835461101f565b9055565b61012491600091611055565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9061104b565b906110b661013a61106e926109db565b825461107e565b9073ffffffffffffffffffffffffffffffffffffffff9061104b565b906110e961013a61106e92610799565b82546110bd565b91906111236110fe8361087b565b61111d73ffffffffffffffffffffffffffffffffffffffff8616610ed6565b14610f08565b6111906000611155611137610252836106d8565b73ffffffffffffffffffffffffffffffffffffffff85161415610f94565b6111806111618561087b565b61111d73ffffffffffffffffffffffffffffffffffffffff8816610ed6565b61118b846004610c54565b611072565b6111d461119d60016109db565b6111c46111ca846003610cbc6111b38a836107a2565b6111c4876111c0836107c1565b0390565b906110a6565b916101ef836107c1565b6111e8816111e3846002610c54565b6110d9565b61122461121e6112187fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95610799565b92610799565b926109db565b9261122e60405190565b600090a4565b90611244826111e3836004610c54565b61124d8161087b565b9161122461121e6112187f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92595610799565b1561128557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b9060ff9061104b565b906112fd61013a61106e92151590565b82546112e4565b61133c73ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff8316141561127e565b6113548361134f84610cbc8560056107a2565b6112ed565b61139461138a6113847f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610799565b93610799565b9361015c60405190565b0390a3565b6113a5610124916113aa565b610815565b6113b5906000610882565b6113c5610ed661025260006106d8565b141590565b90505190610124826100e7565b906020828203126101125761013a916113ca565b73ffffffffffffffffffffffffffffffffffffffff918216815291166020820152604081019190915260806060820181905261013a9291019061019d565b3d15611443576114383d6109e8565b903d6000602084013e565b606090565b91909392611454600090565b9461145e81611577565b1561156d57906114a5600061147d61147860209695610799565b610799565b926114b063150b7a029161148e3390565b9661149860405190565b998a988997889660e01b90565b8652600486016113eb565b03925af16000918161153d575b506114ef57506114cb611429565b80516114da610a6160006109db565b036114e757604051610da5565b805190602001fd5b909150610ef07f150b7a02000000000000000000000000000000000000000000000000000000005b917fffffffff000000000000000000000000000000000000000000000000000000001690565b61155f91925060203d8111611566575b611557818361046e565b8101906113d7565b90386114bd565b503d61154d565b5060019450505050565b3b611585610a6160006109db565b1190565b369037565b906101246115a461159e846109e8565b936104c7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401611589565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8115611608570490565b6115cf565b611616816116ed565b906116266001926101ef846109db565b91806116318461158e565b936020018401905b611644575b50505090565b6116a3907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01927f3031323334353637383961626364656600000000000000000000000000000000600a82061a845361169d600a6109db565b906115fe565b90816116b2610a6160006109db565b146116bf57909181611639565b61163e565b610ef07f01ffc9a700000000000000000000000000000000000000000000000000000000611517565b6116f760006109db565b907a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000061171d816109db565b82101561186f575b506d04ee2d6d415b85acef810000000061173e816109db565b82101561184d575b50662386f26fc10000611758816109db565b82101561182b575b506305f5e10061176f816109db565b821015611809575b50612710611784816109db565b8210156117e7575b506064611798816109db565b8210156117c5575b506117ae610a61600a6109db565b10156117b75790565b61013a906101ef60016109db565b6117e09161169d6117d5926109db565b916101ef60026109db565b90386117a0565b6118029161169d6117f7926109db565b916101ef60046109db565b903861178c565b6118249161169d611819926109db565b916101ef60086109db565b9038611777565b6118469161169d61183b926109db565b916101ef60106109db565b9038611760565b6118689161169d61185d926109db565b916101ef60206109db565b9038611746565b61188a9161169d61187f926109db565b916101ef60406109db565b903861172556fea164736f6c6343000814000a";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
